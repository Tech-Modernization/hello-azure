---
- hosts: webservers
  become: true
  gather_facts: no
  connection: local
  tasks:
    - name: Install git
      package:
        name: git
        state: present

    - name: Delete /app directory, if it exists
      become: true
      become_method: su
      file:
        path: /app
        state: absent

    - name: Fetch app from GitHub
      git:
        repo: https://github.com/contino/hello-azure
        dest: /app
        force: yes

    - name: Ensure that application has been copied first
      stat:
        path: /app
      register: application_directory_info

    - fail:
        msg: "Ensure that the hello-azure application has been copied into this instance first."
      when: not application_directory_info.stat.exists

    - name: Ensure that environment file is present
      stat:
        path: "{{ env_file_location }}"
      register: environment_file_info

    - fail:
        msg: "This environment file is missing: {{ env_file_location }}"
      when: not environment_file_info.stat.exists

    - name: Install application dependencies
      pip:
        executable: pip3
        requirements: /app/requirements.txt

    - name: Install hello-azure service
      block:
        - name: Copy the "hello-azure" systemd unit
          template:
            src: hello_azure.service.j2
            dest: /lib/systemd/system/hello-azure.service

        - name: Ensure that the service is started
          systemd:
            name: hello-azure
            state: started
            daemon_reload: yes


- hosts: databases
  gather_facts: no
  connection: local
  tasks:
    - name: Create the database for Hello Azure app
      become: true
      become_method: su
      become_user: postgres
      postgresql_db:
        name: "{{ lookup('env', 'POSTGRES_DB') }}"

    - name: Create the database user
      become: true
      become_method: su
      become_user: postgres
      postgresql_user:
        db: "{{ lookup('env', 'POSTGRES_DB') }}"
        name: "{{ lookup('env', 'POSTGRES_USER') }}"
        password: "{{ lookup('env', 'POSTGRES_PASSWORD') }}"

    - name: Copy infrastructure test
      copy:
        src: databases_test.yml
        dest: /tests/test.yml

- hosts: all
  gather_facts: no
  connection: local
  tasks:
    - name: Restart goss
      systemd:
        name: goss
        state: restarted

    - name: Ensure that infrastructure tests are passing
      uri:
        url: http://localhost:8080/healthz
